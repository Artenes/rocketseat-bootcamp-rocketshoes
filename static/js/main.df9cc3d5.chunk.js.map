{"version":3,"sources":["services/api.js","util/format.js","pages/Home/styles.js","store/modules/cart/actions.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","styles/global.js","components/Header/styles.js","components/Header/index.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","index.js","assets/images/background.svg","assets/images/logo.svg"],"names":["fakeApi","get","url","split","path","param","data","fakeData","find","p","id","Number","s","status","process","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","ProductList","styled","ul","darken","addToCartRequest","type","addToCartSuccess","product","removeFromCart","updateAmountRequest","amount","updateAmountSuccess","Home","state","products","handleAddProduct","props","api","response","map","priceFormatted","price","this","setState","key","src","image","alt","title","onClick","size","color","Component","connect","cart","reduce","dispatch","bindActionCreators","CartActions","Container","div","ProductTable","table","Total","subtotal","total","decrement","readOnly","value","increment","Routes","exact","component","Cart","createGlobalStyle","background","header","Link","cartSize","length","to","logo","history","createBrowserHistory","combineReducers","action","produce","draft","push","productIndex","findIndex","splice","addToCart","updateAmount","select","productExists","call","stock","stockAmount","currentAmount","toast","error","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","basename","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.df9cc3d5.chunk.js","sourcesContent":["import axios from 'axios';\nimport * as fakeData from '../server.json';\n\nconst fakeApi = {\n  get(url) {\n    const [path, param] = url.split('/');\n\n    if (url === 'products') {\n      return { data: fakeData.products };\n    }\n\n    if (path === 'products' && param) {\n      const data = fakeData.products.find(p => p.id === Number(param));\n      return { data };\n    }\n\n    if (path === 'stock' && param) {\n      const data = fakeData.stock.find(s => s.id === Number(param));\n      return { data };\n    }\n\n    return { data: null, status: 404 };\n  },\n};\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333/',\n});\n\n/**\n * The production build of this app will be deployed\n * without a back-end, that's why we use the fake api\n * outside the development environment.\n */\nexport default process.env.NODE_ENV === 'development' ? api : fakeApi;\n","export const { format: formatPrice } = new Intl.NumberFormat('en', {\n  style: 'currency',\n  currency: 'USD',\n});\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n\n      display: flex;\n      align-items: center;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n        text-transform: uppercase;\n      }\n    }\n  }\n`;\n","export function addToCartRequest(id) {\n  return {\n    type: '@cart/ADD_REQUEST',\n    id,\n  };\n}\n\nexport function addToCartSuccess(product) {\n  return {\n    type: '@cart/ADD_SUCCESS',\n    product,\n  };\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: '@cart/REMOVE',\n    id,\n  };\n}\n\nexport function updateAmountRequest(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\n    id,\n    amount,\n  };\n}\n\nexport function updateAmountSuccess(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\n    id,\n    amount,\n  };\n}\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { connect } from 'react-redux';\n\nimport api from '../../services/api';\nimport { formatPrice } from '../../util/format';\nimport { ProductList } from './styles';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  };\n\n  async componentDidMount() {\n    const response = await api.get('products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n\n    this.setState({ products: data });\n  }\n\n  handleAddProduct = product => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(product.id);\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n\n            <button\n              type=\"button\"\n              onClick={() => this.handleAddProduct(product)}\n            >\n              <div>\n                <MdAddShoppingCart size={16} color=\"#fff\" />\n                {amount[product.id] || 0}\n              </div>\n\n              <span>Add to cart</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: background 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport {\n  MdRemoveCircleOutline,\n  MdAddCircleOutline,\n  MdDelete,\n} from 'react-icons/md';\n\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { formatPrice } from '../../util/format';\n\nimport { Container, ProductTable, Total } from './styles';\n\nfunction Cart({ cart, total, removeFromCart, updateAmountRequest }) {\n  function increment(product) {\n    updateAmountRequest(product.id, product.amount + 1);\n  }\n\n  function decrement(product) {\n    updateAmountRequest(product.id, product.amount - 1);\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th> </th>\n            <th>Product</th>\n            <th>Amount</th>\n            <th>Subtotal</th>\n            <th> </th>\n          </tr>\n        </thead>\n        <tbody>\n          {cart.map(product => (\n            <tr>\n              <td>\n                <img src={product.image} alt={product.title} />\n              </td>\n\n              <td>\n                <strong>{product.title}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n\n              <td>\n                <div>\n                  <button type=\"button\" onClick={() => decrement(product)}>\n                    <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                  <input type=\"text\" readOnly value={product.amount} />\n                  <button type=\"button\" onClick={() => increment(product)}>\n                    <MdAddCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                </div>\n              </td>\n\n              <td>\n                <strong>{product.subtotal}</strong>\n              </td>\n\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => removeFromCart(product.id)}\n                >\n                  <MdDelete size={20} color=\"#7159c1\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n\n      <footer>\n        <button type=\"button\">Finish order</button>\n\n        <Total>\n          <span>Total</span>\n          <strong>{total}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({\n    ...product,\n    subtotal: formatPrice(product.price * product.amount),\n  })),\n  total: formatPrice(\n    state.cart.reduce((total, product) => {\n      return total + product.price * product.amount;\n    }, 0)\n  ),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 14px Roboto sans-serif;\n  }\n\n  #root {\n    max-width: 1020px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 0.2s;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport { Container, Cart } from './styles';\n\nimport logo from '../../assets/images/logo.svg';\n\nfunction Header({ cartSize }) {\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"Rocketshoes\" />\n      </Link>\n\n      <Cart to=\"/cart\">\n        <div>\n          <strong>My cart</strong>\n          <span>{cartSize} items</span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#FFF\" />\n      </Cart>\n    </Container>\n  );\n}\n\nexport default connect(state => ({\n  cartSize: state.cart.length,\n}))(Header);\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n\nexport default combineReducers({\n  cart,\n});\n","import produce from 'immer';\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action;\n        draft.push(product);\n      });\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n    }\n    default:\n      return state;\n  }\n}\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { formatPrice } from '../../../util/format';\n\nimport { addToCartSuccess, updateAmountSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n\n  const stock = yield call(api.get, `stock/${id}`);\n\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n\n  const amount = currentAmount + 1;\n\n  if (amount > stockAmount) {\n    toast.error('No more stock available');\n    return;\n  }\n\n  if (productExists) {\n    yield put(updateAmountSuccess(id, amount));\n  } else {\n    const response = yield call(api.get, `products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    };\n\n    yield put(addToCartSuccess(data));\n  }\n  history.push('/cart');\n}\n\nfunction* updateAmount({ id, amount }) {\n  if (amount <= 0) return;\n\n  const stock = yield call(api.get, `stock/${id}`);\n  const stockAmount = stock.data.amount;\n\n  if (amount > stockAmount) {\n    toast.error('No more stock available');\n    return;\n  }\n\n  yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSaga() {\n  return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(sagaMiddleware)\n      )\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport './config/ReactotronConfig';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\nimport Header from './components/Header';\n\nimport history from './services/history';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL} history={history}>\n        <GlobalStyle />\n        <ToastContainer autoClose={3000} />\n        <Header />\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.879557c5.svg\";"],"sourceRoot":""}